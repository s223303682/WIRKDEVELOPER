@model WIRKDEVELOPER.Models.BookingViewModel
@{
    Layout = "~/Views/Shared/SurgeonLayout.cshtml";
}
<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width,initial-scale=1.0">
</head>
<body>
    <div class="row">
        <div class="col-1">
            <a asp-action="BookingList" class="btn btn-primary">List</a>
        </div>
    </div>
    <div class="row">
        <div class="col">
            <div class="mt-2 bg-info bg-opacity-50 text-center text-white rounded-1">
                <h1>BOOKING FOR A PATIENT</h1>
            </div>
        </div>
    </div>
    <form method="post" asp-action="CreateBooking" class="bg-white bg-opacity-60 border border-3 border-dark">
        <div asp-validation-summary="ModelOnly" class="text-danger"></div>

        <!-- Patient Details -->
        <div class="card mb-4">
            <div class="card-header bg-secondary text-white">Patient Information</div>
            <div class="card-body">
                <div class="form-row">
                    <div class="form-group col-md-3">
                        <label for="Name">Patient Name</label>
                        <input asp-for="Name" type="text" id="Name" name="Name" class="form-control" readonly />
                    </div>
                    <div class="form-group col-md-3">
                        <label for="Surname">Patient Surname</label>
                        <input asp-for="Surname" type="text" id="Surname" name="Surname" class="form-control" readonly />
                    </div>
                    <div class="form-group col-md-3">
                        <label for="Gender">Gender</label>
                        <input asp-for="Gender" type="text" id="Gender" name="Gender" class="form-control" readonly />
                    </div>
                    <div class="form-group col-md-3">
                        <label for="Email">Email Address</label>
                        <input asp-for="Email" type="email" id="Email" name="Email" class="form-control" readonly />
                    </div>
                </div>
            </div>
        </div>

        <!-- Booking Details -->
        <div class="row">
            <div class="col">
                <div class="form-group">
                    <label asp-for="Date"></label>
                    <input type="date" asp-for="Date" class="form-control" required />
                    <span asp-validation-for="Date" class="text-danger"></span>
                </div>
            </div>
            <div class="col">
                <div class="form-group">
                    <label asp-for="Time"></label>
                    <input type="time" asp-for="Time" class="form-control" required />
                    <span asp-validation-for="Time" class="text-danger"></span>
                </div>
            </div>
        </div>

        <!-- Dropdown for Anaesthesiologist and Operation Theatre -->
        <div class="row">
            <div class="col">
                <div class="form-group">
                    <label asp-for="UserId"></label>
                    <select asp-for="UserId" class="form-control" asp-items="ViewBag.getAnaesthesiologist" required>
                        <option value="" disabled selected>Select Anaesthesiologist</option>
                    </select>
                    <span asp-validation-for="UserId" class="text-danger"></span>
                </div>


            </div>
            <div class="col">
                <div class="form-group">
                    <label asp-for="OperationTheatreID"></label>
                    <select asp-for="OperationTheatreID" class="form-control" asp-items="@ViewBag.getOperationTheatre" required>
                        <option value="" disabled selected>--Select Theatre--</option>
                    </select>
                    <span asp-validation-for="OperationTheatreID" class="text-danger"></span>
                </div>
            </div>
        </div>

        <!-- Treatment Codes Section -->
        <div class="row">
            <div class="col" id="treatmentCodesContainer">
                <div class="form-group treatmentCodeItem">
                    <label asp-for="TreatmentCodeIDs">Treatment Codes</label>
                    <select class="form-control treatmentCodeSelect" name="TreatmentCodeIDs" required>
                        <option value="" disabled selected>--Select Treatment Code--</option>
                        @foreach (var item in ViewBag.getTreatmentCode)
                        {
                            <option value="@item.Value">@item.Text</option>
                        }
                    </select>
                    <span class="text-danger"></span>
                    <button type="button" class="btn btn-danger removeTreatmentCode mt-2">Remove</button>
                </div>
            </div>
            <div class="col-12">
                <button type="button" id="addTreatmentCode" class="btn btn-success mt-2">+ Add Another Treatment Code</button>
            </div>
        </div>

      
        <!-- Submit Section -->
        <div class="row">
            <div class="col">
                <a asp-controller="Surgeon" asp-action="Dashboard" class="btn btn-secondary">Back</a>
            </div>
            <div class="col">
                <input type="submit" value="Add" class="btn btn-primary" />
            </div>
        </div>
    </form>

    <script>
        document.addEventListener('DOMContentLoaded', function () {
            let treatmentCodeIndex = 1;

            // Function to update the displayed selected treatment codes
            function updateSelectedCodes() {
                const selectedCodesContainer = document.getElementById('selectedTreatmentCodes');
                const selectedCodes = Array.from(document.querySelectorAll('.treatmentCodeSelect'))
                    .map(select => select.options[select.selectedIndex]?.text || '')
                    .filter(text => text !== '')
                    .join(', ');

                selectedCodesContainer.textContent = selectedCodes;
            }

            // Function to handle adding a new treatment code item
            document.getElementById('addTreatmentCode').addEventListener('click', function () {
                const container = document.getElementById('treatmentCodesContainer');
                const template = container.querySelector('.treatmentCodeItem').cloneNode(true);

                // Clear selection and update the name attribute
                const select = template.querySelector('select');
                select.value = '';
                select.name = `TreatmentCodeIDs[${treatmentCodeIndex}]`; // Update name for model binding
                treatmentCodeIndex++;

                // Append the new item to the container
                container.appendChild(template);
                updateSelectedCodes(); // Update selected codes after adding
            });

            // Event delegation to handle remove button clicks
            document.getElementById('treatmentCodesContainer').addEventListener('click', function (event) {
                if (event.target.classList.contains('removeTreatmentCode')) {
                    const itemToRemove = event.target.closest('.treatmentCodeItem');
                    if (itemToRemove) {
                        itemToRemove.parentNode.removeChild(itemToRemove);
                        updateSelectedCodes(); // Update selected codes after removing
                    }
                }
            });

            // Update selected codes on change
            document.getElementById('treatmentCodesContainer').addEventListener('change', function (event) {
                if (event.target.classList.contains('treatmentCodeSelect')) {
                    updateSelectedCodes();
                }
            });
        });

    </script>

</body>
</html>


















